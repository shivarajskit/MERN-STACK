Components, Props, State, JSX

âœ… Learn: 

Functional components (React.FC<Props>).

Props typing (interfaces).

Local state with useState<T>().

JSX expressions & conditional rendering.

âš¡ Mini Project:

Build a To-Do app (frontend React + backend Node/MongoDB).

Backend: Create tasks collection ({title, completed}) in MongoDB.

Express API: GET /tasks, POST /tasks, PATCH /tasks/:id, DELETE /tasks/:id.

Frontend: Fetch tasks, display list, toggle complete, delete.

Style with Tailwind (cards, buttons, form).
---------------------------------------------------------- - Doneâœ…
Day 10â€“11 â†’ Hooks & API Calls

âœ… Learn:

useState â†’ Local state.

useEffect â†’ Side effects (API calls, subscriptions).

useContext â†’ Global state (theme/auth).

useReducer â†’ Manage complex state (e.g., Todo reducer).

API calls â†’ fetch vs axios + error handling.

âš¡ Mini Project:

Extend To-Do app with:

Loading spinner (isLoading).

Error message (error).

Use a useReducer for tasks instead of multiple states.

Try axios with interceptors for error logging.
---------------------------------------------------------------- - Doneâœ…
Day 12 â†’ React Router + Private Routes

âœ… Learn:

Install: npm install react-router-dom.

Routes, Route, Link, useNavigate, useParams.

Nested routes.

Private routes (redirect if not authenticated).

âš¡ Mini Project:

Add authentication to To-Do app:

Pages: /login, /register, /dashboard.

Store JWT from backend in localStorage or HttpOnly cookie.

Private route wrapper â†’ If no token, redirect to /login.
---------------------------------------------------------------------------------- - Doneâœ…

Day 13â€“14 â†’ State Management + Forms

âœ… Learn:

Redux Toolkit â†’ slices, store, dispatch, selectors.

Context API â†’ good for smaller apps.

Form handling: controlled inputs, validation (required, min length).

Optional: React Hook Form (react-hook-form) for cleaner validation.

âš¡ Mini Project:

Convert auth & tasks to Redux Toolkit:

authSlice â†’ user, token, login/logout.

tasksSlice â†’ tasks, loading, error.

Add form validation (login & signup forms).

ðŸŽ¯ End of Week 2 Outcomes:

Youâ€™ll have a To-Do MERN app (with auth + protected routes).

Youâ€™ll know components, props, state, hooks, router, Redux, forms.

This app will become your portfolio-ready project.